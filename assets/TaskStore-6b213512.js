import{aJ as O,r as A,f as g}from"./index-09be7c6a.js";import{d as t}from"./date-e07ca1ad.js";import{u as B,a as F}from"./GoalStore-7d8b6d59.js";const _=O("TaskStore",()=>{const{data:o,error:v,isValidating:p,mutate:D,getItem:I,setItem:h,addItem:Y,getIndex:w,removeItem:y,createItem:S,updateItem:T,deleteItem:k,getChanges:C,isChanged:W}=B("/tasks/"),s=F(),b=e=>(e.forEach(a=>{a.goalName=a.goal?s.getItem(a.goal).name:null}),e),n=A({done:!0,recurring:!0,goal:null});s.$onAction(({name:e,args:a})=>{e==="deleteItem"&&n.value.goal===a[0]&&(n.value.goal=null)});const d=e=>t.subtractFromDate(e,{days:t.getDayOfWeek(e)-1}),c=e=>t.formatDate(e,"YYYY-w"),f=t.startOfDate(new Date,"day"),i=d(f),x=c(f),E=g(()=>o.value&&s.data?b([...o.value]):null),l=g(()=>o.value?o.value.filter(e=>{const a=new Date(e.planned.slice(0,10))<i;return a&&n.value.done&&e.done||a&&n.value.recurring&&e.group_id?!1:!(n.value.goal&&!s.getBranch(n.value.goal).includes(e.goal))}).sort((e,a)=>Date.parse(e.planned)-Date.parse(a.planned)):null),N=g(()=>{const e=(a,r,u)=>{for(;r<=u;)a[c(r)]={day:t.formatDate(r,"YYYY-MM-DD"),tasks:[]},r=t.addToDate(r,{days:7});return a};if(l.value&&l.value.length){const a=new Date(l.value[0].planned.slice(0,10)),r=t.addToDate(new Date(l.value[l.value.length-1].planned.slice(0,10)),{days:7}),u=e({},d(a),d(r));return l.value.forEach(m=>{u[c(m.planned)].tasks.push(m)}),u}return e({},i,t.addToDate(i,{days:14}))});return{data:o,error:v,isValidating:p,mutate:D,getItem:I,setItem:h,addItem:Y,getIndex:w,removeItem:y,createItem:S,updateItem:T,deleteItem:k,getChanges:C,isChanged:W,currentWeek:x,filter:n,relative:E,filtered:l,calendar:N}});export{_ as u};
