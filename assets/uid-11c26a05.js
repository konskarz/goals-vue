let o=[],i=[];function d(t){i=i.filter(e=>e!==t)}function l(t){d(t),i.push(t)}function y(t){d(t),i.length===0&&o.length!==0&&(o[o.length-1](),o=[])}function p(t){i.length===0?t():o.push(t)}function F(t){o=o.filter(e=>e!==t)}let u,s=0;const n=new Array(256);for(let t=0;t<256;t++)n[t]=(t+256).toString(16).substring(1);const f=(()=>{const t=typeof crypto<"u"?crypto:typeof window<"u"?window.crypto||window.msCrypto:void 0;if(t!==void 0){if(t.randomBytes!==void 0)return t.randomBytes;if(t.getRandomValues!==void 0)return e=>{const r=new Uint8Array(e);return t.getRandomValues(r),r}}return e=>{const r=[];for(let a=e;a>0;a--)r.push(Math.floor(Math.random()*256));return r}})(),c=4096;function g(){(u===void 0||s+16>c)&&(s=0,u=f(c));const t=Array.prototype.slice.call(u,s,s+=16);return t[6]=t[6]&15|64,t[8]=t[8]&63|128,n[t[0]]+n[t[1]]+n[t[2]]+n[t[3]]+"-"+n[t[4]]+n[t[5]]+"-"+n[t[6]]+n[t[7]]+"-"+n[t[8]]+n[t[9]]+"-"+n[t[10]]+n[t[11]]+n[t[12]]+n[t[13]]+n[t[14]]+n[t[15]]}export{p as a,l as b,F as c,y as r,g as u};
