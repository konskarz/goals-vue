import{aJ as k,f as d,r as C}from"./index-d2c79a88.js";import{d as t}from"./date-b3561e64.js";import{u as W,a as O}from"./GoalStore-2c01810a.js";const E=k("TaskStore",()=>{const{data:o,refetch:m,getItem:D,createItem:h,updateItem:Y,deleteItem:w,getChanges:I,isChanged:y}=W("/tasks/"),u=O(),S=d(()=>o.value&&u.data?o.value.map(e=>({...e,goalName:e.goal?u.getItem(e.goal).name:null})):null),n=C({done:!0,recurring:!0,goal:null}),g=d(()=>n.value.goal?u.getBranch(n.value.goal):null);u.$onAction(({name:e,args:a})=>{e==="deleteItem"&&n.value.goal===a[0]&&(n.value.goal=null)});const c=e=>t.subtractFromDate(e,{days:t.getDayOfWeek(e)-1}),f=e=>t.formatDate(e,"YYYY-w"),v=t.startOfDate(new Date,"day"),i=c(v),T=f(v),r=d(()=>o.value?o.value.filter(e=>!(!e.planned||new Date(e.planned.slice(0,10))<i&&(n.value.done&&e.done||n.value.recurring&&e.group_id)||g.value&&!g.value.includes(e.goal))).sort((e,a)=>Date.parse(e.planned)-Date.parse(a.planned)):null),b=d(()=>{const e=(a,l,s)=>{for(;l<=s;)a[f(l)]={day:t.formatDate(l,"YYYY-MM-DD"),tasks:[]},l=t.addToDate(l,{days:7});return a};if(r.value&&r.value.length){const a=new Date(r.value[0].planned.slice(0,10)),l=t.addToDate(new Date(r.value[r.value.length-1].planned.slice(0,10)),{days:7}),s=e({},c(a),c(l));return r.value.forEach(p=>{s[f(p.planned)].tasks.push(p)}),s}return e({},i,t.addToDate(i,{days:14}))});return{data:o,refetch:m,getItem:D,createItem:h,updateItem:Y,deleteItem:w,getChanges:I,isChanged:y,relative:S,filter:n,currentWeek:T,calendar:b}});export{E as u};
