import{aJ as x,r as N,f,aK as O}from"./index-52896586.js";import{d as t}from"./date-7894991d.js";import{u as A,a as B}from"./GoalStore-74e108f3.js";const K=x("TaskStore",()=>{const{isLoading:m,isError:v,data:o,error:D,refetch:h,getItem:Y,getIndex:w,createItem:I,updateItem:y,deleteItem:S,getChanges:T,isChanged:k}=A("/tasks/"),s=B(),C=e=>(e.forEach(a=>{a.goalName=a.goal?s.getItem(a.goal).name:null}),e),n=N({done:!0,recurring:!0,goal:null});s.$onAction(({name:e,args:a})=>{e==="deleteItem"&&n.value.goal===a[0]&&(n.value.goal=null)});const d=e=>t.subtractFromDate(e,{days:t.getDayOfWeek(e)-1}),c=e=>t.formatDate(e,"YYYY-w"),g=t.startOfDate(new Date,"day"),i=d(g),E=c(g),W=f(()=>o.value&&s.data?C([...O(o.value)]):null),r=f(()=>o.value?o.value.filter(e=>{if(!e.planned)return!1;const a=new Date(e.planned.slice(0,10))<i;return a&&n.value.done&&e.done||a&&n.value.recurring&&e.group_id?!1:!(n.value.goal&&!s.getBranch(n.value.goal).includes(e.goal))}).sort((e,a)=>Date.parse(e.planned)-Date.parse(a.planned)):null),b=f(()=>{const e=(a,l,u)=>{for(;l<=u;)a[c(l)]={day:t.formatDate(l,"YYYY-MM-DD"),tasks:[]},l=t.addToDate(l,{days:7});return a};if(r.value&&r.value.length){const a=new Date(r.value[0].planned.slice(0,10)),l=t.addToDate(new Date(r.value[r.value.length-1].planned.slice(0,10)),{days:7}),u=e({},d(a),d(l));return r.value.forEach(p=>{u[c(p.planned)].tasks.push(p)}),u}return e({},i,t.addToDate(i,{days:14}))});return{isLoading:m,isError:v,data:o,error:D,refetch:h,getItem:Y,getIndex:w,createItem:I,updateItem:y,deleteItem:S,getChanges:T,isChanged:k,currentWeek:E,filter:n,relative:W,filtered:r,calendar:b}});export{K as u};
