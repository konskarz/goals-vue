import{af as b,j as f,r as w}from"./index-16f2d0be.js";import{d as n}from"./date-15e2a1f1.js";import{a as O,u as W}from"./GoalStore-6e145ffb.js";const B=b("TaskStore",()=>{const{data:o,refetch:p,getItem:m,createItem:D,updateItem:h,deleteItem:y}=O("/tasks/"),u=W(),I=f(()=>o.value&&u.data?o.value.map(e=>({...e,goalName:e.goal?u.getItem(e.goal).name:null})):null),t=w({done:!0,recurring:!0,goal:null}),g=f(()=>t.value.goal?u.getBranch(t.value.goal):null);u.$onAction(({name:e,args:a})=>{e==="deleteItem"&&t.value.goal===a[0]&&(t.value.goal=null)});const s=e=>n.subtractFromDate(e,{days:n.getDayOfWeek(e)-1}),i=e=>n.formatDate(e,"YYYY-MM-DD"),S=n.startOfDate(new Date,"day"),c=s(S),T=i(c),l=f(()=>o.value?o.value.filter(e=>!(!e.planned||new Date(e.planned.slice(0,10))<c&&(t.value.done&&e.done||t.value.recurring&&e.group_id)||g.value&&!g.value.includes(e.goal))).sort((e,a)=>Date.parse(e.planned)-Date.parse(a.planned)):null),Y=f(()=>{const e=(a,r,d)=>{for(;r<=d;)a[i(r)]=[],r=n.addToDate(r,{days:7});return a};if(l.value&&l.value.length){const a=s(l.value[0].planned.slice(0,10)),r=n.addToDate(s(l.value[l.value.length-1].planned.slice(0,10)),{days:7}),d=e({},a,r);return l.value.forEach(v=>{d[i(s(v.planned.slice(0,10)))].push(v)}),d}return e({},c,n.addToDate(c,{days:14}))});return{data:o,refetch:p,getItem:m,createItem:D,updateItem:h,deleteItem:y,relative:I,filter:t,currentWeek:T,filtered:l,calendar:Y}});export{B as u};
